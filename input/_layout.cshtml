<!DOCTYPE html>
<html class="has-background-light" lang="ja">

<head>

  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  @if(Document.ContainsKey(WebKeys.Description))
  {
    <meta name="description" content="@Document.GetString(WebKeys.Description)">
  }
  @if(Document.ContainsKey(WebKeys.Author))
  {
    <meta name="author" content="@Document.GetString(WebKeys.Author)">
  }

  <title>@Document.GetString("PageTitle")</title>

  <link rel="canonical" href="@(Document.GetString("Canonical") ?? Document.GetLink(true))">

  @{
    @foreach (IDocument rssFeed in Outputs["**/*.rss"])
    {
      <link type="application/rss+xml" rel="alternate" title="@rssFeed.GetString(WebKeys.Title)" href="@rssFeed.GetLink()" />
    }
    @foreach (IDocument atomFeed in Outputs["**/*.atom"])
    {
      <link type="application/atom+xml" rel="alternate" title="@atomFeed.GetString(WebKeys.Title)" href="@atomFeed.GetLink()" />
    }
  }
  
  <meta name="application-name" content="@Document.GetString("SiteTitle")" />
  <meta name="msapplication-tooltip" content="@Document.GetString("SiteTitle")" />
  <meta name="msapplication-starturl" content="@Context.GetLink("/")" />

  <meta property="og:title" content="@Document.GetString("PageTitle")" />
  @if (Document.ContainsKey(WebKeys.Image))
  {
    <meta property="og:image" content="@Context.GetLink(Document.GetString(WebKeys.Image))" />
  }
  <meta property="og:type" content="website" />
  <meta property="og:url" content="@Document.GetLink(true)" />
  
  <link rel="shortcut icon" href="@Context.GetLink("/favicon.ico")" type="image/x-icon">
  <link rel="icon" href="@Context.GetLink("/favicon.ico")" type="image/x-icon">

		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bulma@0.9.3/css/bulma.min.css">
  
  <!-- Custom styles for this template -->
  <link href="@Context.GetLink("/scss/clean-blog.css")" rel="stylesheet">
  
  <script src="https://cdn.jsdelivr.net/npm/prismjs@1.19.0/components/prism-core.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/prismjs@1.19.0/plugins/autoloader/prism-autoloader.min.js" data-no-mirror></script>
  <script src="https://cdn.jsdelivr.net/npm/quicklink@2.0.0/dist/quicklink.umd.js"></script>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/prismjs@1.19.0/themes/prism.css">
  <link rel="stylesheet" href="@Context.GetLink("/post.css")">

  <!-- Lunr search -->
  @if (Context.GetBool(WebKeys.GenerateSearchIndex))
  {
    <script src="https://cdn.jsdelivr.net/npm/lunr@2.3.9/lunr.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/pako@2.0.3/dist/pako_inflate.min.js"></script>
    <script src="@(Context.GetLink(Context.GetPath(WebKeys.SearchScriptPath, "search.js")))"></script>
  }
  
  @RenderSection("Head", false)
		<style>
			.sticky {
			    position:sticky;
			    top:0;
			    z-index: 100;
			}
		</style>
</head>

<body>

  <!-- Navigation -->
  @RenderSectionOrPartial("Navigation", "_navigation")

  <!-- Main Content -->
		<div class="section">
			<div class="container">
				<div class="columns is-desktop">
					<div class="column is-three-quarters">
						<main>
							@RenderBody()
						</main>
					</div>
					<div class="column">
						<!-- Side -->
						<aside>
							<div class="has-text-centered">
								<img src="icon.png" width="100px" height="100px" loading="lazy">
								<h1 class="title is-5">ひつじのひと</h1>
							</div>
							<div class="content mb-3">
								<p class="mt-5">ひつじの皮をかぶったひと。 フリーランスなう。</p>
							</div>
							<div>
								<ul class="level is-mobile">
									<li class="level-item">
										<a href="/about">
											<span class="icon is-medium">
												<i class="fas fa-user-circle fa-2x has-text-black"></i>
											</span>
										</a>
									</li>
									<li class="level-item">
										<a href="https://twitter.com/hitsuji_no_hito">
											<span class="icon is-medium">
												<i class="fab fa-twitter fa-2x has-text-black"></i>
											</span>
										</a>
									</li>
									<li class="level-item">
										<a href="https://github.com/Ovis">
											<span class="icon is-medium">
												<i class="fab fa-github fa-2x has-text-black"></i>
											</span>
										</a>
									</li>
								</ul>
							</div>
						</aside>
						<aside class="mt-5">
							<h1 class="title is-5">最新記事</h1>
							<nav class="panel">
								<a class="panel-block">
									<span class="panel-icon">
										<i class="fas fa-book" aria-hidden="true"></i>
									</span>DelegateでLINQのWhere条件を外から渡す 
								</a>
								<a class="panel-block">
									<span class="panel-icon">
										<i class="fas fa-book" aria-hidden="true"></i>
									</span>marksheet 
								</a>
								<a class="panel-block">
									<span class="panel-icon">
										<i class="fas fa-book" aria-hidden="true"></i>
									</span>minireset.css 
								</a>
								<a class="panel-block">
									<span class="panel-icon">
										<i class="fas fa-book" aria-hidden="true"></i>
									</span>jgthms.github.io 
								</a>
								<a class="panel-block">
									<span class="panel-icon">
										<i class="fas fa-code-branch" aria-hidden="true"></i>
									</span>daniellowtw/infboard 
								</a>
								<a class="panel-block">
									<span class="panel-icon">
										<i class="fas fa-code-branch" aria-hidden="true"></i>
									</span>mojs 
								</a>
							</nav>
						</aside>
						<aside class="mt-5">
							<h1 class="title is-5">タグ</h1>
							<nav class="panel">
								@{
						                IDocument[] tags = Outputs.Get("tags.html")?.GetChildren().OrderByDescending(x => x.GetChildren().Count()).Take(10).ToArray() ?? Array.Empty<IDocument>();
						                if (tags.Length > 0)
						                {
						                        @foreach (IDocument tag in Outputs.Get("tags.html").GetChildren().OrderByDescending(x => x.GetChildren().Count()).Take(10))
						                        {
						                            string postCount = tag.GetChildren().Count().ToString();
													<a class="panel-block" href="@Context.GetLink(tag)">
														<span class="panel-icon">
															<i class="fas fa-book" aria-hidden="true"></i>
														</span>
														<span>
															@tag.GetTitle() (@postCount)
														</span>
													</a>
						                        }
						                }
						            }
							</nav>
						</aside>
						<aside class="mt-5">
							<h1 class="title is-5 mb-1">検索</h1>
							<div class="panel-block">
								<form action="/search" method="GET">
									<p class="control has-icons-left">
										<input class="input" type="text" placeholder="Search" name="query">
										<span class="icon is-left">
											<i class="fas fa-search" aria-hidden="true"></i>
										</span>
									</p>
								</form>
							</div>
						</aside>
					</div>
				</div>
			</div>
		</div>

  @RenderSection("Scripts", false)

  <!-- Custom scripts for this template -->
  <script src="@Context.GetLink("/js/clean-blog.js")"></script>
<script src="https://kit.fontawesome.com/aa97a90330.js" crossorigin="anonymous"></script>
		<script>
		document.addEventListener('DOMContentLoaded', () => {

		  // Get all "navbar-burger" elements
		  const $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);

		  // Check if there are any navbar burgers
		  if ($navbarBurgers.length > 0) {

		    // Add a click event on each of them
		    $navbarBurgers.forEach( el => {
		      el.addEventListener('click', () => {

		        // Get the target from the "data-target" attribute
		        const target = el.dataset.target;
		        const $target = document.getElementById(target);

		        // Toggle the "is-active" class on both the "navbar-burger" and the "navbar-menu"
		        el.classList.toggle('is-active');
		        $target.classList.toggle('is-active');

		      });
		    });
		  }

		});
	</script>
		<script type="text/javascript" src="https://b.st-hatena.com/js/bookmark_button.js" charset="utf-8" async="async"></script>
</body>

</html>
